{% from "nginx/map.jinja" import nginx, maintenance, provider with context %}
{% from "nginx/map_app.jinja" import nginx_app with context %}

{% extends "nginx/templates/vhost-base.conf" %}

{% block index %}
    {%if index_doc is defined and index_doc %}
    index {{index_doc}};
    {% else %}
    index index.php;
    {% endif %}
{% endblock index %}

{% block locations %}

    fastcgi_buffers 256 4k;
    fastcgi_buffer_size 4k;

    # serve static files directly
    location ~* ^.+.(jpg|jpeg|gif|css|png|js|ico|htm|html|xml|txt|woff|eot|ttf)$ {
        access_log        off;
    {% if provider == 'vagrant' %}
        expires           0;
        add_header        Cache-Control private;
        sendfile  off;
    {% else %}
        expires           24h;
    {% endif %}
    }

    location / {
        try_files $uri $uri/ /index.php$is_args$args;
    }

    location ~ \.php$ {
        {% include "nginx/templates/include-basic-auth.conf" with context %}
        {% include "nginx/templates/include-503.conf" with context %}

        {% if nginx.throttling.enabled -%}
        limit_req   zone=php  burst={{throttling.php.burst}};
        {%- endif %}

        fastcgi_index   index.php;
        fastcgi_pass    unix:/var/run/php5-fpm/{{appslug}}.sock;

        include         fastcgi_params;
        fastcgi_param   SCRIPT_FILENAME    $document_root$fastcgi_script_name;
        fastcgi_param   SCRIPT_NAME        $fastcgi_script_name;
        {% for var, val in fastcgienv.iteritems() %}
        fastcgi_param   {{var}} {{val}};
        {% endfor %}
    }


    # i.e. deny access to .htaccess in case someone will create it
    location ~ /\. {
        deny  all;
    }

{% endblock locations %}
